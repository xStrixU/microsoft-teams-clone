/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
	'/users': {
		post: operations['UsersController_create'];
	};
	'/sessions': {
		post: operations['SessionsController_create'];
	};
	'/sessions/me': {
		get: operations['SessionsController_getCurrent'];
		delete: operations['SessionsController_deleteCurrent'];
	};
}

export type webhooks = Record<string, never>;

export interface components {
	schemas: {
		CreateUserDto: {
			firstName: string;
			lastName: string;
			email: string;
			password: string;
		};
		UserDto: {
			id: number;
			firstName: string;
			lastName: string;
			email: string;
		};
		OpenAPIHttpException: {
			statusCode: number;
			message: string;
			error: string;
		};
		CreateSessionDto: {
			email: string;
			password: string;
		};
	};
	responses: never;
	parameters: never;
	requestBodies: never;
	headers: never;
	pathItems: never;
}

export type external = Record<string, never>;

export interface operations {
	UsersController_create: {
		requestBody: {
			content: {
				'application/json': components['schemas']['CreateUserDto'];
			};
		};
		responses: {
			/** @description User has been created */
			201: {
				content: {
					'application/json': components['schemas']['UserDto'];
				};
			};
			/** @description Email is already registered */
			409: {
				content: {
					'application/json': components['schemas']['OpenAPIHttpException'];
				};
			};
		};
	};
	SessionsController_create: {
		requestBody: {
			content: {
				'application/json': components['schemas']['CreateSessionDto'];
			};
		};
		responses: {
			/** @description Session has been created */
			201: {
				content: {
					'application/json': components['schemas']['UserDto'];
				};
			};
			/** @description Invalid email or password */
			401: {
				content: {
					'application/json': components['schemas']['OpenAPIHttpException'];
				};
			};
		};
	};
	SessionsController_getCurrent: {
		responses: {
			/** @description Returns the user associated with the current session */
			200: {
				content: {
					'application/json': components['schemas']['UserDto'];
				};
			};
			/** @description You are not authenticated */
			401: {
				content: {
					'application/json': components['schemas']['OpenAPIHttpException'];
				};
			};
		};
	};
	SessionsController_deleteCurrent: {
		responses: {
			200: never;
			/** @description The current session has been created */
			204: never;
		};
	};
}
